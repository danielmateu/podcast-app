import Head from 'next/head'
import { Layout } from '@/components/Layout'
import { useState } from 'react'
import { Filter } from '@/components/Filter'
import { PodcastList } from '@/components/PodcastList'


export default function Home({ podcast }) {

  const [searchTerm, setSearchTerm] = useState('')

  //Filtrar los podcasts basados en el input
  const filteredPodcasts = podcast.feed.entry.filter(podcast => {
    return podcast['im:name'] ? podcast['im:name'].label.toLowerCase().includes(searchTerm.toLowerCase()) : false;
  })



  //   const savedPodcasts = JSON.parse(localStorage.getItem(PODCASTS_STORAGE_KEY));
  //   const lastUpdated = localStorage.getItem(`${PODCASTS_STORAGE_KEY}_lastUpdated`);
  //   const limit = 100;
  //   /* This is a conditional statement that checks if there are saved podcasts and if the last time
  //   they were updated was less than a day ago. If so, it sets the podcasts to the saved podcasts and
  //   returns. */
  //   if (savedPodcasts && lastUpdated && Date.now() - lastUpdated < ONE_DAY_IN_MS) {
  //     setPodcasts(savedPodcasts);
  //     return;
  //   }

  //   fetch(`https://itunes.apple.com/us/rss/toppodcasts/limit=${limit}/genre=1320/json`)
  //     .then((res) => res.json())
  //     .then((data) => {
  //       /* Getting the data from the API and saving it in a variable. */
  //       const newPodcasts = data.feed.entry;
  //       setPodcasts(newPodcasts);
  //       // setCount(podcasts.length)
  //       /* Saving the podcasts in the local storage. */
  //       localStorage.setItem(PODCASTS_STORAGE_KEY, JSON.stringify(newPodcasts));
  //       /* Saving the date when the podcasts were last updated. */
  //       localStorage.setItem(`${PODCASTS_STORAGE_KEY}_lastUpdated`, Date.now());
  //       setLoading(false);

  //       setCount(filteredPodcasts.length);
  //     }).catch((err) => {
  //       console.log(err);
  //     })
  //   // eslint-disable-next-line react-hooks/exhaustive-deps
  // }, []);


  // console.log(props);
  return (
    <Layout
      title='Podcasts'
      description='Podcasts'
    >
      <Head>
        <title>Podcast App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='p-6'>
        <Filter searchTerm={searchTerm} setSearchTerm={setSearchTerm} filteredPodcasts={filteredPodcasts} />
        {/* Pintaremos los podcast en pantalla */}
        <PodcastList filteredPodcasts={filteredPodcasts} />
      </main>
    </Layout>
  )
}

export const getServerSideProps = async (context) => {
  const limit = 100;
  const res = await fetch(`https://itunes.apple.com/us/rss/toppodcasts/limit=${limit}/genre=1320/json`)
  const podcasts = await res.json()
  // console.log(podcasts);
  return {
    props: {
      podcast: podcasts
    }
  }
}


